name: 🔄 Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 🚀 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          npm ci --prefer-offline --no-audit
          npm ls --depth=0
        env:
          NODE_ENV: test

      - name: 🔍 Lint code
        run: |
          npm run lint -- --max-warnings 0
          echo "✅ Linting passed"
        continue-on-error: false

      - name: 🏗️ Type check
        run: |
          npx tsc --noEmit --incremental false
          echo "✅ Type checking passed"

      - name: 🧪 Run tests
        run: |
          npm test -- --coverage --watchAll=false --passWithNoTests
          echo "✅ Tests completed"
        env:
          CI: true
          NODE_ENV: test

      - name: 📊 Upload coverage reports
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true

      - name: 🏗️ Build application
        run: |
          npm run build
          echo "✅ Build completed successfully"
        env:
          NODE_ENV: production

      - name: 📦 Upload build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            .next/
            !.next/cache
          retention-days: 1

  build-matrix:
    name: 🏗️ Build Matrix
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v5

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🏗️ Build on ${{ matrix.os }}
        run: npm run build
        env:
          NODE_ENV: production

  health-check:
    name: 🩺 Health Check
    runs-on: ubuntu-latest
    needs: [test]
    if: always()

    steps:
      - name: 📊 Check workflow status
        run: |
          echo "Test job status: ${{ needs.test.result }}"
          
          if [[ "${{ needs.test.result }}" == "success" ]]; then
            echo "✅ All checks passed successfully!"
            exit 0
          elif [[ "${{ needs.test.result }}" == "failure" ]]; then
            echo "❌ Tests failed - blocking deployment"
            exit 1
          else
            echo "⚠️ Tests were skipped or cancelled"
            exit 1
          fi